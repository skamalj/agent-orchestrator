{
    "StartAt": "CheckNextAgent",
    "States": {
        "CheckNextAgent": {
            "Type": "Choice",
            "Choices": [
                {
                    "Variable": "$.nextagent",
                    "StringEquals": "END",
                    "Next": "Done"
                }
            ],
            "Default": "GetLambdaArn"
        },
        "GetLambdaArn": {
            "Type": "Task",
            "Resource": "arn:aws:states:::aws-sdk:dynamodb:getItem",
            "Parameters": {
                "TableName": "AgentRegistry",
                "Key": {
                    "agent_name": {
                        "S.$": "$.nextagent"
                    }
                }
            },
            "ResultPath": "$.dynamo_result",
            "Next": "SetNextFunctionName"
        },
        "SetNextFunctionName": {
            "Type": "Pass",
            "Parameters": {
                "lambda_arn.$": "$.dynamo_result.Item.lambda_arn.S",
                "input": {
                    "nextagent.$": "$.nextagent",
                    "message.$": "$.message",
                    "thread_id.$": "$.thread_id",
                    "channel_type.$": "$.channel_type",
                    "from.$": "$.from"
                }
            },
            "Next": "InvokeLambda"
        },
        "InvokeLambda": {
            "Type": "Task",
            "Resource": "arn:aws:states:::lambda:invoke",
            "Parameters": {
                "FunctionName.$": "$.lambda_arn",
                "Payload.$": "$.input"
            },
            "ResultSelector": {
                "parsed.$": "States.StringToJson($.Payload)"
            },
            "ResultPath": "$",
            "Next": "UnpackParsedResult"
        },
        "UnpackParsedResult": {
            "Type": "Pass",
            "Parameters": {
                "nextagent.$": "$.parsed.nextagent",
                "message.$": "$.parsed.message",
                "thread_id.$": "$.parsed.thread_id",
                "channel_type.$": "$.parsed.channel_type",
                "from.$": "$.parsed.from"
            },
            "Next": "CheckNextAgent"
        },
        "Done": {
            "Type": "Succeed"
        }
    }
}